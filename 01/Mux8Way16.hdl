// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       c if sel == 010
 *       d if sel == 011
 *       e if sel == 100
 *       f if sel == 101
 *       g if sel == 110
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    Not(in=sel[0], out=notSel0);
    Not(in=sel[1], out=notSel1);
    And(a=sel[0], b=sel[1], out=sel0AndSel1);
    And(a=notSel0, b=notSel1, out=notSel0AndNotSel1);
    And(a=sel[0], b=notSel1, out=sel0AndNotSel1);
    And(a=notSel0, b=sel[1], out=notSel0AndSel1);

    And(a=sel[2], b=notSel0AndNotSel1, out=selE);
    And(a=sel[2], b=sel0AndNotSel1, out=selF);
    And(a=sel[2], b=notSel0AndSel1, out=selG);
    And(a=sel[2], b=sel0AndSel1, out=selH);

    Mux4Way16(a=a, b=b, c=c, d=d, sel=sel[0..1], out=outABCD);
    Mux16(a=outABCD, b=e, sel=selE, out=outABCDE);
    Mux16(a=outABCDE, b=f, sel=selF, out=outABCDEF);
    Mux16(a=outABCDEF, b=g, sel=selG, out=outABCDEFG);
    Mux16(a=outABCDEFG, b=h, sel=selH, out=out);
}